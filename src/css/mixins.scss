@mixin scrollbar-rail-default($theme) {
  display: none;
  position: absolute; /* please don't change 'position' */
  opacity: map_get($theme, rail-default-opacity);
  transition: background-color .2s linear, opacity .2s linear;
}

@mixin scrollbar-rail-hover($theme) {
  background-color: map_get($theme, rail-hover-bg);
  opacity: map_get($theme, rail-hover-opacity);
}

@mixin scrollbar-default($theme) {
  position: absolute; /* please don't change 'position' */
  background-color: map_get($theme, bar-container-hover-bg);
  border-radius: map_get($theme, border-radius);
  transition: background-color .2s linear, height .2s linear, width .2s ease-in-out,
              border-radius .2s ease-in-out;
}

@mixin scrollbar-hover($theme) {
  background-color: map_get($theme, bar-hover-bg);
}

@mixin in-scrolling($theme) {
  &.ps-in-scrolling {
    &.ps-x > .ps-scrollbar-x-rail {
      @include scrollbar-rail-hover($theme);
      > .ps-scrollbar-x {
        @include scrollbar-hover($theme);
        height: map_get($theme, scrollbar-x-hover-height);
      }
    }
    &.ps-y > .ps-scrollbar-y-rail {
      @include scrollbar-rail-hover($theme);
      > .ps-scrollbar-y {
        @include scrollbar-hover($theme);
        width: map_get($theme, scrollbar-y-hover-width);
      }
    }
  }
}

@mixin shadow-default() {
  display: none;
  pointer-events: none;
  position: absolute;
  transition: box-shadow .4s linear;
}

@mixin shadow-top() {
  @include shadow-default();
  box-shadow:$ps-shadow-box-top-inactive;
  height:$ps-shadow-width;
}
@mixin shadow-right() {
  @include shadow-default();
  box-shadow:$ps-shadow-box-right-inactive;
  width:$ps-shadow-width;
}
@mixin shadow-bottom() {
  @include shadow-default();
  box-shadow:$ps-shadow-box-bottom-inactive;
  height:$ps-shadow-width;
}
@mixin shadow-left() {
  @include shadow-default();
  box-shadow:$ps-shadow-box-left-inactive;
  width:$ps-shadow-width;
}
@mixin shadow-top-active() {
  @include shadow-default();
  box-shadow:$ps-shadow-box-top;
  height:$ps-shadow-width;
}
@mixin shadow-right-active() {
  @include shadow-default();
  box-shadow:$ps-shadow-box-right;
  width:$ps-shadow-width;
}
@mixin shadow-bottom-active() {
  @include shadow-default();
  box-shadow:$ps-shadow-box-bottom;
  height:$ps-shadow-width;
}
@mixin shadow-left-active() {
  @include shadow-default();
  box-shadow:$ps-shadow-box-left;
  width:$ps-shadow-width;
}

// Layout and theme mixin
@mixin ps-container($theme) {
  -ms-touch-action: auto;
  touch-action: auto;
  overflow: hidden !important;
  -ms-overflow-style: none;

  // Edge
  @supports (-ms-overflow-style: none) {
    overflow: auto !important;
  }
  // IE10+
  @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
    overflow: auto !important;
  }

  &.ps-active-x > .ps-scrollbar-x-rail,
  &.ps-active-y > .ps-scrollbar-y-rail {
    display: block;
    background-color: map_get($theme, bar-bg);
  }

  &.ps-active-x > .ps-shadow-x-left,
  &.ps-active-x > .ps-shadow-x-right,
  &.ps-active-y > .ps-shadow-y-top,
  &.ps-active-y > .ps-shadow-y-bottom {
    display: block !important;
  }

  @include in-scrolling($theme);

  > .ps-scrollbar-x-rail {
    @include scrollbar-rail-default($theme);
    bottom: map_get($theme, scrollbar-x-rail-bottom); /* there must be 'bottom' for ps-scrollbar-x-rail */
    height: map_get($theme, scrollbar-x-rail-height);

    > .ps-scrollbar-x {
      @include scrollbar-default($theme);
      bottom: map_get($theme, scrollbar-x-bottom); /* there must be 'bottom' for ps-scrollbar-x */
      height: map_get($theme, scrollbar-x-height);
    }
    &:hover,
    &:active {
      > .ps-scrollbar-x {
        height: map_get($theme, scrollbar-x-hover-height);
      }
    }
  }

  > .ps-scrollbar-y-rail {
    @include scrollbar-rail-default($theme);
    right: map_get($theme, scrollbar-y-rail-right); /* there must be 'right' for ps-scrollbar-y-rail */
    width: map_get($theme, scrollbar-y-rail-width);

    > .ps-scrollbar-y {
      @include scrollbar-default($theme);
      right: map_get($theme, scrollbar-y-right); /* there must be 'right' for ps-scrollbar-y */
      width: map_get($theme, scrollbar-y-width);
    }
    &:hover,
    &:active {
      > .ps-scrollbar-y {
        width: map_get($theme, scrollbar-y-hover-width);
      }
    }
  }

  &.ps-active-x > .ps-shadow-x-left {
    @include shadow-left();
  }
  &.ps-active-x > .ps-shadow-x-right {
    @include shadow-right();
  }
  &.ps-active-y > .ps-shadow-y-top {
    @include shadow-top();
  }
  &.ps-active-y > .ps-shadow-y-bottom {
    @include shadow-bottom();
  }
  &.ps-active-x.ps-x-reach-start-more > .ps-shadow-x-left {
    @include shadow-left-active();
  }
  &.ps-active-x.ps-x-reach-end-more > .ps-shadow-x-right {
    @include shadow-right-active();
  }
  &.ps-active-y.ps-y-reach-start-more > .ps-shadow-y-top {
    @include shadow-top-active();
  }
  &.ps-active-y.ps-y-reach-end-more > .ps-shadow-y-bottom {
    @include shadow-bottom-active();
  }

  &:hover {
    @include in-scrolling($theme);

    > .ps-scrollbar-x-rail,
    > .ps-scrollbar-y-rail {
      opacity: map_get($theme, rail-container-hover-opacity);
    }

    > .ps-scrollbar-x-rail:hover {
      @include scrollbar-rail-hover($theme);

      > .ps-scrollbar-x {
        @include scrollbar-hover($theme);
      }
    }

    > .ps-scrollbar-y-rail:hover {
      @include scrollbar-rail-hover($theme);

      > .ps-scrollbar-y {
        @include scrollbar-hover($theme);
      }
    }
  }
}
